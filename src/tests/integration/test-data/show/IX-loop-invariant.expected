
┌─ 1 (root, init)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│
│  (402 steps)
├─ 3
│   k: #halt ~> #codeDeposit 491460923342184218035706888008750043977755113263 ~> #pc [  ...
│   pc: 43
│   callDepth: 1
│   statusCode: EVMC_SUCCESS
│
│  (163 steps)
├─ 4 (terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: 194
│   callDepth: 0
│   statusCode: EVMC_SUCCESS
│
│  (1 step)
├─ 5
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│
│  (1000 steps)
├─ 7
│   k: #pc [ MLOAD ] ~> #execute ~> CONTINUATION:K
│   pc: 2766
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│
│  (1000 steps)
├─ 8
│   k: #next [ SUB ] ~> #execute ~> CONTINUATION:K
│   pc: 2054
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│
│  (386 steps)
├─ 9 (split)
│   k: JUMPI 2537 bool2Word ( VV5_data_114b9705:Bytes ~> .K ==K b"" ~> .K ) ~> #pc [ JU ...
│   pc: 2521
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
┃
┃ (branch)
┣━━┓ constraint: VV5_data_114b9705:Bytes ~> .K ==K b"" ~> .K
┃  │
┃  ├─ 10
┃  │   k: JUMPI 2537 bool2Word ( VV5_data_114b9705:Bytes ~> .K ==K b"" ~> .K ) ~> #pc [ JU ...
┃  │   pc: 2521
┃  │   callDepth: 0
┃  │   statusCode: STATUSCODE:StatusCode
┃  │
┃  │  (1000 steps)
┃  ├─ 12
┃  │   k: #execute ~> CONTINUATION:K
┃  │   pc: 2089
┃  │   callDepth: 0
┃  │   statusCode: STATUSCODE:StatusCode
┃  │
┃  │  (1000 steps)
┃  ├─ 14
┃  │   k: notMaxUInt5 ~> #push ~> #pc [ NOT ] ~> #execute ~> #return 352 0 ~> #pc [ CALL ] ...
┃  │   pc: 661
┃  │   callDepth: 1
┃  │   statusCode: STATUSCODE:StatusCode
┃  │
┃  │  (904 steps)
┃  ├─ 17
┃  │   k: #halt ~> #return 352 0 ~> #pc [ CALL ] ~> #checkRevert ~> #updateRevertOutput 35 ...
┃  │   pc: 140
┃  │   callDepth: 1
┃  │   statusCode: EVMC_REVERT
┃  │
┃  │  (134 steps)
┃  ├─ 21 (terminal)
┃  │   k: #halt ~> CONTINUATION:K
┃  │   pc: 194
┃  │   callDepth: 0
┃  │   statusCode: EVMC_SUCCESS
┃  │
┃  ┊  constraint: true
┃  ┊  subst: OMITTED SUBST
┃  └─ 6 (leaf, target, terminal)
┃      k: #halt ~> CONTINUATION:K
┃      pc: PC_CELL_5d410f2a:Int
┃      callDepth: CALLDEPTH_CELL_5d410f2a:Int
┃      statusCode: STATUSCODE_FINAL:StatusCode
┃
┗━━┓ constraint: ( notBool VV5_data_114b9705:Bytes ~> .K ==K b"" ~> .K )
   │
   ├─ 11
   │   k: JUMPI 2537 bool2Word ( VV5_data_114b9705:Bytes ~> .K ==K b"" ~> .K ) ~> #pc [ JU ...
   │   pc: 2521
   │   callDepth: 0
   │   statusCode: STATUSCODE:StatusCode
   │
   │  (71 steps)
   ├─ 13 (split)
   │   k: JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32 ) ~> #pc ...
   │   pc: 2521
   │   callDepth: 0
   │   statusCode: STATUSCODE:StatusCode
   ┃
   ┃ (branch)
   ┣━━┓ constraint: lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
   ┃  │
   ┃  ├─ 15
   ┃  │   k: JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32 ) ~> #pc ...
   ┃  │   pc: 2521
   ┃  │   callDepth: 0
   ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  │
   ┃  │  (4 steps)
   ┃  ├─ 19
   ┃  │   k: #execute ~> CONTINUATION:K
   ┃  │   pc: 2537
   ┃  │   callDepth: 0
   ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  │
   ┃  ┊  constraint: OMITTED CONSTRAINT
   ┃  ┊  subst: OMITTED SUBST
   ┃  ├─ 32
   ┃  │   k: #execute ~> CONTINUATION:K
   ┃  │   pc: 2537
   ┃  │   callDepth: 0
   ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  │
   ┃  │  (28 steps)
   ┃  ├─ 33 (split)
   ┃  │   k: JUMPI 2552 bool2Word ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Byte ...
   ┃  │   pc: 2545
   ┃  │   callDepth: 0
   ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃
   ┃  ┃ (branch)
   ┃  ┣━━┓ constraint: V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
   ┃  ┃  │
   ┃  ┃  ├─ 34
   ┃  ┃  │   k: JUMPI 2552 bool2Word ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Byte ...
   ┃  ┃  │   pc: 2545
   ┃  ┃  │   callDepth: 0
   ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  │
   ┃  ┃  │  (1000 steps)
   ┃  ┃  ├─ 36
   ┃  ┃  │   k: #accessAccounts 491460923342184218035706888008750043977755113263 ~> 840 ~> #push ...
   ┃  ┃  │   pc: 2102
   ┃  ┃  │   callDepth: 0
   ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  │
   ┃  ┃  │  (60 steps)
   ┃  ┃  ├─ 38
   ┃  ┃  │   k: CALL 0 491460923342184218035706888008750043977755113263 0 ( ( notMaxUInt5 &Int ( ...
   ┃  ┃  │   pc: 2117
   ┃  ┃  │   callDepth: 0
   ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  │
   ┃  ┃  │  (1 step)
   ┃  ┃  ├─ 40
   ┃  ┃  │   k: #accessAccounts 491460923342184218035706888008750043977755113263 ~> #checkCall 7 ...
   ┃  ┃  │   pc: 2117
   ┃  ┃  │   callDepth: 0
   ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  │
   ┃  ┃  │  (18 steps)
   ┃  ┃  ├─ 42
   ┃  ┃  │   k: #precompiled? ( 491460923342184218035706888008750043977755113263 , SHANGHAI ) ~> ...
   ┃  ┃  │   pc: 0
   ┃  ┃  │   callDepth: 1
   ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  │
   ┃  ┃  │  (1 step)
   ┃  ┃  ├─ 44
   ┃  ┃  │   k: #execute ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ...
   ┃  ┃  │   pc: 0
   ┃  ┃  │   callDepth: 1
   ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  │
   ┃  ┃  │  (1000 steps)
   ┃  ┃  ├─ 46
   ┃  ┃  │   k: #execute ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ...
   ┃  ┃  │   pc: 328
   ┃  ┃  │   callDepth: 1
   ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  │
   ┃  ┃  │  (789 steps)
   ┃  ┃  ├─ 48
   ┃  ┃  │   k: #end EVMC_REVERT ~> #pc [ REVERT ] ~> #execute ~> #return ( ( notMaxUInt5 &Int ( ...
   ┃  ┃  │   pc: 140
   ┃  ┃  │   callDepth: 1
   ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  │
   ┃  ┃  │  (1 step)
   ┃  ┃  ├─ 50
   ┃  ┃  │   k: #halt ~> #pc [ REVERT ] ~> #execute ~> #return ( ( notMaxUInt5 &Int ( lengthByte ...
   ┃  ┃  │   pc: 140
   ┃  ┃  │   callDepth: 1
   ┃  ┃  │   statusCode: EVMC_REVERT
   ┃  ┃  │
   ┃  ┃  │  (2 steps)
   ┃  ┃  ├─ 52
   ┃  ┃  │   k: #halt ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes )  ...
   ┃  ┃  │   pc: 140
   ┃  ┃  │   callDepth: 1
   ┃  ┃  │   statusCode: EVMC_REVERT
   ┃  ┃  │
   ┃  ┃  │  (1 step)
   ┃  ┃  ├─ 54
   ┃  ┃  │   k: #popCallStack ~> #popWorldState ~> 0 ~> #push ~> #refund 0 ~> #setLocalMem ( ( n ...
   ┃  ┃  │   pc: 140
   ┃  ┃  │   callDepth: 1
   ┃  ┃  │   statusCode: EVMC_REVERT
   ┃  ┃  │
   ┃  ┃  │  (130 steps)
   ┃  ┃  ├─ 56
   ┃  ┃  │   k: #end EVMC_SUCCESS ~> #pc [ STOP ] ~> #execute ~> CONTINUATION:K
   ┃  ┃  │   pc: 194
   ┃  ┃  │   callDepth: 0
   ┃  ┃  │   statusCode: EVMC_SUCCESS
   ┃  ┃  │
   ┃  ┃  │  (1 step)
   ┃  ┃  ├─ 58
   ┃  ┃  │   k: #halt ~> #pc [ STOP ] ~> #execute ~> CONTINUATION:K
   ┃  ┃  │   pc: 194
   ┃  ┃  │   callDepth: 0
   ┃  ┃  │   statusCode: EVMC_SUCCESS
   ┃  ┃  │
   ┃  ┃  │  (2 steps)
   ┃  ┃  ├─ 60 (terminal)
   ┃  ┃  │   k: #halt ~> CONTINUATION:K
   ┃  ┃  │   pc: 194
   ┃  ┃  │   callDepth: 0
   ┃  ┃  │   statusCode: EVMC_SUCCESS
   ┃  ┃  │
   ┃  ┃  ┊  constraint: true
   ┃  ┃  ┊  subst: OMITTED SUBST
   ┃  ┃  └─ 6 (leaf, target, terminal)
   ┃  ┃      k: #halt ~> CONTINUATION:K
   ┃  ┃      pc: PC_CELL_5d410f2a:Int
   ┃  ┃      callDepth: CALLDEPTH_CELL_5d410f2a:Int
   ┃  ┃      statusCode: STATUSCODE_FINAL:StatusCode
   ┃  ┃
   ┃  ┗━━┓ constraint: ( notBool V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes ) )
   ┃     │
   ┃     ├─ 35
   ┃     │   k: JUMPI 2552 bool2Word ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Byte ...
   ┃     │   pc: 2545
   ┃     │   callDepth: 0
   ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     │
   ┃     │  (1000 steps)
   ┃     ├─ 37
   ┃     │   k: #next [ DUP ( 2 ) ] ~> #execute ~> CONTINUATION:K
   ┃     │   pc: 2097
   ┃     │   callDepth: 0
   ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     │
   ┃     │  (73 steps)
   ┃     ├─ 39
   ┃     │   k: CALL 0 491460923342184218035706888008750043977755113263 0 ( ( notMaxUInt5 &Int ( ...
   ┃     │   pc: 2117
   ┃     │   callDepth: 0
   ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     │
   ┃     │  (1 step)
   ┃     ├─ 41
   ┃     │   k: #accessAccounts 491460923342184218035706888008750043977755113263 ~> #checkCall 7 ...
   ┃     │   pc: 2117
   ┃     │   callDepth: 0
   ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     │
   ┃     │  (18 steps)
   ┃     ├─ 43
   ┃     │   k: #precompiled? ( 491460923342184218035706888008750043977755113263 , SHANGHAI ) ~> ...
   ┃     │   pc: 0
   ┃     │   callDepth: 1
   ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     │
   ┃     │  (1 step)
   ┃     ├─ 45
   ┃     │   k: #execute ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ...
   ┃     │   pc: 0
   ┃     │   callDepth: 1
   ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     │
   ┃     │  (1000 steps)
   ┃     ├─ 47
   ┃     │   k: #execute ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ...
   ┃     │   pc: 328
   ┃     │   callDepth: 1
   ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     │
   ┃     │  (789 steps)
   ┃     ├─ 49
   ┃     │   k: #end EVMC_REVERT ~> #pc [ REVERT ] ~> #execute ~> #return ( ( notMaxUInt5 &Int ( ...
   ┃     │   pc: 140
   ┃     │   callDepth: 1
   ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     │
   ┃     │  (1 step)
   ┃     ├─ 51
   ┃     │   k: #halt ~> #pc [ REVERT ] ~> #execute ~> #return ( ( notMaxUInt5 &Int ( lengthByte ...
   ┃     │   pc: 140
   ┃     │   callDepth: 1
   ┃     │   statusCode: EVMC_REVERT
   ┃     │
   ┃     │  (2 steps)
   ┃     ├─ 53
   ┃     │   k: #halt ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes )  ...
   ┃     │   pc: 140
   ┃     │   callDepth: 1
   ┃     │   statusCode: EVMC_REVERT
   ┃     │
   ┃     │  (1 step)
   ┃     ├─ 55
   ┃     │   k: #popCallStack ~> #popWorldState ~> 0 ~> #push ~> #refund 0 ~> #setLocalMem ( ( n ...
   ┃     │   pc: 140
   ┃     │   callDepth: 1
   ┃     │   statusCode: EVMC_REVERT
   ┃     │
   ┃     │  (130 steps)
   ┃     ├─ 57
   ┃     │   k: #end EVMC_SUCCESS ~> #pc [ STOP ] ~> #execute ~> CONTINUATION:K
   ┃     │   pc: 194
   ┃     │   callDepth: 0
   ┃     │   statusCode: EVMC_SUCCESS
   ┃     │
   ┃     │  (1 step)
   ┃     ├─ 59
   ┃     │   k: #halt ~> #pc [ STOP ] ~> #execute ~> CONTINUATION:K
   ┃     │   pc: 194
   ┃     │   callDepth: 0
   ┃     │   statusCode: EVMC_SUCCESS
   ┃     │
   ┃     │  (2 steps)
   ┃     ├─ 61 (terminal)
   ┃     │   k: #halt ~> CONTINUATION:K
   ┃     │   pc: 194
   ┃     │   callDepth: 0
   ┃     │   statusCode: EVMC_SUCCESS
   ┃     │
   ┃     ┊  constraint: true
   ┃     ┊  subst: OMITTED SUBST
   ┃     └─ 6 (leaf, target, terminal)
   ┃         k: #halt ~> CONTINUATION:K
   ┃         pc: PC_CELL_5d410f2a:Int
   ┃         callDepth: CALLDEPTH_CELL_5d410f2a:Int
   ┃         statusCode: STATUSCODE_FINAL:StatusCode
   ┃
   ┗━━┓ constraint: ( notBool lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32 )
      │
      ├─ 16
      │   k: JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32 ) ~> #pc ...
      │   pc: 2521
      │   callDepth: 0
      │   statusCode: STATUSCODE:StatusCode
      │
      │  (71 steps)
      ├─ 20 (split)
      │   k: JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64 ) ~> #pc ...
      │   pc: 2521
      │   callDepth: 0
      │   statusCode: STATUSCODE:StatusCode
      ┃
      ┃ (branch)
      ┣━━┓ constraint: lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
      ┃  │
      ┃  ├─ 22
      ┃  │   k: JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64 ) ~> #pc ...
      ┃  │   pc: 2521
      ┃  │   callDepth: 0
      ┃  │   statusCode: STATUSCODE:StatusCode
      ┃  │
      ┃  │  (4 steps)
      ┃  ├─ 30
      ┃  │   k: #execute ~> CONTINUATION:K
      ┃  │   pc: 2537
      ┃  │   callDepth: 0
      ┃  │   statusCode: STATUSCODE:StatusCode
      ┃  │
      ┃  ┊  constraint: OMITTED CONSTRAINT
      ┃  ┊  subst: OMITTED SUBST
      ┃  └─ 32
      ┃      k: #execute ~> CONTINUATION:K
      ┃      pc: 2537
      ┃      callDepth: 0
      ┃      statusCode: STATUSCODE:StatusCode
      ┃     (continues as previously)
      ┃
      ┗━━┓ constraint: ( notBool lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64 )
         │
         ├─ 23
         │   k: JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64 ) ~> #pc ...
         │   pc: 2521
         │   callDepth: 0
         │   statusCode: STATUSCODE:StatusCode
         │
         │  (71 steps)
         ├─ 25 (split)
         │   k: JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96 ) ~> #pc ...
         │   pc: 2521
         │   callDepth: 0
         │   statusCode: STATUSCODE:StatusCode
         ┃
         ┃ (branch)
         ┣━━┓ constraint: lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
         ┃  │
         ┃  ├─ 28
         ┃  │   k: JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96 ) ~> #pc ...
         ┃  │   pc: 2521
         ┃  │   callDepth: 0
         ┃  │   statusCode: STATUSCODE:StatusCode
         ┃  │
         ┃  │  (4 steps)
         ┃  ├─ 31
         ┃  │   k: #execute ~> CONTINUATION:K
         ┃  │   pc: 2537
         ┃  │   callDepth: 0
         ┃  │   statusCode: STATUSCODE:StatusCode
         ┃  │
         ┃  ┊  constraint: OMITTED CONSTRAINT
         ┃  ┊  subst: OMITTED SUBST
         ┃  └─ 32
         ┃      k: #execute ~> CONTINUATION:K
         ┃      pc: 2537
         ┃      callDepth: 0
         ┃      statusCode: STATUSCODE:StatusCode
         ┃     (continues as previously)
         ┃
         ┗━━┓ constraint: ( notBool lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96 )
            │
            └─ 29 (leaf, refuted)
                k: JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96 ) ~> #pc ...
                pc: 2521
                callDepth: 0
                statusCode: STATUSCODE:StatusCode




module SUMMARY-TEST%PORTALTEST.TEST-WITHDRAWAL-PAUSED((UINT256,ADDRESS,ADDRESS,UINT256,UINT256,BYTES),UINT256,(BYTES32,BYTES32,BYTES32,BYTES32),BYTES[]):0
    
    
    rule [BASIC-BLOCK-1-TO-3]: <foundry>
           <kevm>
             <k>
               ( .K => #halt
               ~> #codeDeposit 491460923342184218035706888008750043977755113263
               ~> #pc [ CREATE ] )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( b"" => b"`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x046\x10a\x00+W`\x005`\xe0\x1c\x80cHpIo\x14a\x000W[`\x00\x80\xfd[a\x00Ca\x00>6`\x04a\x01\xccV[a\x00EV[\x00[`\x00T`\xff\x16\x15a\x00\x8dW`@QbF\x1b\xcd`\xe5\x1b\x81R` `\x04\x82\x01R`\x0e`$\x82\x01Rm\x14\x1b\xdc\x9d\x18[\x0e\x88\x1c\x18]\\\xd9Y`\x92\x1b`D\x82\x01R`d\x01`@Q\x80\x91\x03\x90\xfd[\x84`@\x01Q`\x01`\x01`\xa0\x1b\x03\x16\x85` \x01Q`\x01`\x01`\xa0\x1b\x03\x16\x7f\xa9\x98\xe9\xf4+\xe9\xc7\xbd\x87y\x8dY\x90\x93\xd8}\x03\x93\xe0\x8f\xf7B\xa5\x12\xc6#\xaf\xe9\xc6\xa9\xc6\x1f`@Q`@Q\x80\x91\x03\x90\xa3PPPPPV[cNH{q`\xe0\x1b`\x00R`A`\x04R`$`\x00\xfd[`@Q`\xc0\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01\x15Wa\x01\x15a\x00\xdcV[`@R\x90V[`@Q`\x1f\x82\x01`\x1f\x19\x16\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01DWa\x01Da\x00\xdcV[`@R\x91\x90PV[\x805`\x01`\x01`\xa0\x1b\x03\x81\x16\x81\x14a\x01cW`\x00\x80\xfd[\x91\x90PV[`\x00`\x80\x82\x84\x03\x12\x15a\x01zW`\x00\x80\xfd[P\x91\x90PV[`\x00\x80\x83`\x1f\x84\x01\x12a\x01\x92W`\x00\x80\xfd[P\x815g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x15a\x01\xaaW`\x00\x80\xfd[` \x83\x01\x91P\x83` \x82`\x05\x1b\x85\x01\x01\x11\x15a\x01\xc5W`\x00\x80\xfd[\x92P\x92\x90PV[`\x00\x80`\x00\x80`\x00`\xe0\x86\x88\x03\x12\x15a\x01\xe4W`\x00\x80\xfd[\x855g\xff\xff\xff\xff\xff\xff\xff\xff\x80\x82\x11\x15a\x01\xfcW`\x00\x80\xfd[\x90\x87\x01\x90`\xc0\x82\x8a\x03\x12\x15a\x02\x10W`\x00\x80\xfd[a\x02\x18a\x00\xf2V[\x825\x81R` a\x02)\x81\x85\x01a\x01LV[\x81\x83\x01Ra\x029`@\x85\x01a\x01LV[`@\x83\x01R``\x84\x015``\x83\x01R`\x80\x84\x015`\x80\x83\x01R`\xa0\x84\x015\x83\x81\x11\x15a\x02dW`\x00\x80\xfd[\x80\x85\x01\x94PP\x8a`\x1f\x85\x01\x12a\x02yW`\x00\x80\xfd[\x835\x83\x81\x11\x15a\x02\x8bWa\x02\x8ba\x00\xdcV[a\x02\x9d`\x1f\x82\x01`\x1f\x19\x16\x83\x01a\x01\x1bV[\x81\x81R\x8c\x83\x83\x88\x01\x01\x11\x15a\x02\xb1W`\x00\x80\xfd[\x81\x83\x87\x01\x84\x83\x017`\x00\x91\x81\x01\x83\x01\x91\x90\x91R`\xa0\x83\x01R\x90\x97P\x88\x015\x95Pa\x02\xde\x89`@\x8a\x01a\x01hV[\x94P`\xc0\x88\x015\x91P\x80\x82\x11\x15a\x02\xf4W`\x00\x80\xfd[Pa\x03\x01\x88\x82\x89\x01a\x01\x80V[\x96\x99\x95\x98P\x93\x96P\x92\x94\x93\x92PPPV\xfe\xa2dipfsX\"\x12 \xc6x\nB\x12@\xa4\xf9q\xc9\xfd\"\x10\xc1\xd2\xdf\xf8h\xab\x9di#M}\xd7\xe6\xb3\x87\x9e\xdcc\xb2dsolcC\x00\x08\r\x003" )
                 </output>
                 <statusCode>
                   ( _STATUSCODE => EVMC_SUCCESS )
                 </statusCode>
                 <callStack>
                   ( .List => ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\n\x92T\xe4"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 193 : ( selector ( "setUp()" ) : .WordStack ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x00\x80T`\xff\x19\x16`\x01\x17\x90Ua\x03H\x80a\x00-`\x009`\x00\xf3\xfe`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x046\x10a\x00+W`\x005`\xe0\x1c\x80cHpIo\x14a\x000W[`\x00\x80\xfd[a\x00Ca\x00>6`\x04a\x01\xccV[a\x00EV[\x00[`\x00T`\xff\x16\x15a\x00\x8dW`@QbF\x1b\xcd`\xe5\x1b\x81R` `\x04\x82\x01R`\x0e`$\x82\x01Rm\x14\x1b\xdc\x9d\x18[\x0e\x88\x1c\x18]\\\xd9Y`\x92\x1b`D\x82\x01R`d\x01`@Q\x80\x91\x03\x90\xfd[\x84`@\x01Q`\x01`\x01`\xa0\x1b\x03\x16\x85` \x01Q`\x01`\x01`\xa0\x1b\x03\x16\x7f\xa9\x98\xe9\xf4+\xe9\xc7\xbd\x87y\x8dY\x90\x93\xd8}\x03\x93\xe0\x8f\xf7B\xa5\x12\xc6#\xaf\xe9\xc6\xa9\xc6\x1f`@Q`@Q\x80\x91\x03\x90\xa3PPPPPV[cNH{q`\xe0\x1b`\x00R`A`\x04R`$`\x00\xfd[`@Q`\xc0\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01\x15Wa\x01\x15a\x00\xdcV[`@R\x90V[`@Q`\x1f\x82\x01`\x1f\x19\x16\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01DWa\x01Da\x00\xdcV[`@R\x91\x90PV[\x805`\x01`\x01`\xa0\x1b\x03\x81\x16\x81\x14a\x01cW`\x00\x80\xfd[\x91\x90PV[`\x00`\x80\x82\x84\x03\x12\x15a\x01zW`\x00\x80\xfd[P\x91\x90PV[`\x00\x80\x83`\x1f\x84\x01\x12a\x01\x92W`\x00\x80\xfd[P\x815g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x15a\x01\xaaW`\x00\x80\xfd[` \x83\x01\x91P\x83` \x82`\x05\x1b\x85\x01\x01\x11\x15a\x01\xc5W`\x00\x80\xfd[\x92P\x92\x90PV[`\x00\x80`\x00\x80`\x00`\xe0\x86\x88\x03\x12\x15a\x01\xe4W`\x00\x80\xfd[\x855g\xff\xff\xff\xff\xff\xff\xff\xff\x80\x82\x11\x15a\x01\xfcW`\x00\x80\xfd[\x90\x87\x01\x90`\xc0\x82\x8a\x03\x12\x15a\x02\x10W`\x00\x80\xfd[a\x02\x18a\x00\xf2V[\x825\x81R` a\x02)\x81\x85\x01a\x01LV[\x81\x83\x01Ra\x029`@\x85\x01a\x01LV[`@\x83\x01R``\x84\x015``\x83\x01R`\x80\x84\x015`\x80\x83\x01R`\xa0\x84\x015\x83\x81\x11\x15a\x02dW`\x00\x80\xfd[\x80\x85\x01\x94PP\x8a`\x1f\x85\x01\x12a\x02yW`\x00\x80\xfd[\x835\x83\x81\x11\x15a\x02\x8bWa\x02\x8ba\x00\xdcV[a\x02\x9d`\x1f\x82\x01`\x1f\x19\x16\x83\x01a\x01\x1bV[\x81\x81R\x8c\x83\x83\x88\x01\x01\x11\x15a\x02\xb1W`\x00\x80\xfd[\x81\x83\x87\x01\x84\x83\x017`\x00\x91\x81\x01\x83\x01\x91\x90\x91R`\xa0\x83\x01R\x90\x97P\x88\x015\x95Pa\x02\xde\x89`@\x8a\x01a\x01hV[\x94P`\xc0\x88\x015\x91P\x80\x82\x11\x15a\x02\xf4W`\x00\x80\xfd[Pa\x03\x01\x88\x82\x89\x01a\x01\x80V[\x96\x99\x95\x98P\x93\x96P\x92\x94\x93\x92PPPV\xfe\xa2dipfsX\"\x12 \xc6x\nB\x12@\xa4\xf9q\xc9\xfd\"\x10\xc1\xd2\xdf\xf8h\xab\x9di#M}\xd7\xe6\xb3\x87\x9e\xdcc\xb2dsolcC\x00\x08\r\x003"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) )
                 </callStack>
                 <interimStates>
                   ( .List => ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       SetItem ( 491460923342184218035706888008750043977755113263 )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } ) )
                 </interimStates>
                 <touchedAccounts>
                   ( .Set => ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 728815563385977040452943777879061427756277306518 => 491460923342184218035706888008750043977755113263 )
                   </id>
                   <caller>
                     ( CALLER_ID:Int => 728815563385977040452943777879061427756277306518 )
                   </caller>
                   <callData>
                     ( b"\n\x92T\xe4" => b"" )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     ( b"" => b"`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x046\x10a\x00+W`\x005`\xe0\x1c\x80cHpIo\x14a\x000W[`\x00\x80\xfd[a\x00Ca\x00>6`\x04a\x01\xccV[a\x00EV[\x00[`\x00T`\xff\x16\x15a\x00\x8dW`@QbF\x1b\xcd`\xe5\x1b\x81R` `\x04\x82\x01R`\x0e`$\x82\x01Rm\x14\x1b\xdc\x9d\x18[\x0e\x88\x1c\x18]\\\xd9Y`\x92\x1b`D\x82\x01R`d\x01`@Q\x80\x91\x03\x90\xfd[\x84`@\x01Q`\x01`\x01`\xa0\x1b\x03\x16\x85` \x01Q`\x01`\x01`\xa0\x1b\x03\x16\x7f\xa9\x98\xe9\xf4+\xe9\xc7\xbd\x87y\x8dY\x90\x93\xd8}\x03\x93\xe0\x8f\xf7B\xa5\x12\xc6#\xaf\xe9\xc6\xa9\xc6\x1f`@Q`@Q\x80\x91\x03\x90\xa3PPPPPV[cNH{q`\xe0\x1b`\x00R`A`\x04R`$`\x00\xfd[`@Q`\xc0\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01\x15Wa\x01\x15a\x00\xdcV[`@R\x90V[`@Q`\x1f\x82\x01`\x1f\x19\x16\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01DWa\x01Da\x00\xdcV[`@R\x91\x90PV[\x805`\x01`\x01`\xa0\x1b\x03\x81\x16\x81\x14a\x01cW`\x00\x80\xfd[\x91\x90PV[`\x00`\x80\x82\x84\x03\x12\x15a\x01zW`\x00\x80\xfd[P\x91\x90PV[`\x00\x80\x83`\x1f\x84\x01\x12a\x01\x92W`\x00\x80\xfd[P\x815g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x15a\x01\xaaW`\x00\x80\xfd[` \x83\x01\x91P\x83` \x82`\x05\x1b\x85\x01\x01\x11\x15a\x01\xc5W`\x00\x80\xfd[\x92P\x92\x90PV[`\x00\x80`\x00\x80`\x00`\xe0\x86\x88\x03\x12\x15a\x01\xe4W`\x00\x80\xfd[\x855g\xff\xff\xff\xff\xff\xff\xff\xff\x80\x82\x11\x15a\x01\xfcW`\x00\x80\xfd[\x90\x87\x01\x90`\xc0\x82\x8a\x03\x12\x15a\x02\x10W`\x00\x80\xfd[a\x02\x18a\x00\xf2V[\x825\x81R` a\x02)\x81\x85\x01a\x01LV[\x81\x83\x01Ra\x029`@\x85\x01a\x01LV[`@\x83\x01R``\x84\x015``\x83\x01R`\x80\x84\x015`\x80\x83\x01R`\xa0\x84\x015\x83\x81\x11\x15a\x02dW`\x00\x80\xfd[\x80\x85\x01\x94PP\x8a`\x1f\x85\x01\x12a\x02yW`\x00\x80\xfd[\x835\x83\x81\x11\x15a\x02\x8bWa\x02\x8ba\x00\xdcV[a\x02\x9d`\x1f\x82\x01`\x1f\x19\x16\x83\x01a\x01\x1bV[\x81\x81R\x8c\x83\x83\x88\x01\x01\x11\x15a\x02\xb1W`\x00\x80\xfd[\x81\x83\x87\x01\x84\x83\x017`\x00\x91\x81\x01\x83\x01\x91\x90\x91R`\xa0\x83\x01R\x90\x97P\x88\x015\x95Pa\x02\xde\x89`@\x8a\x01a\x01hV[\x94P`\xc0\x88\x015\x91P\x80\x82\x11\x15a\x02\xf4W`\x00\x80\xfd[Pa\x03\x01\x88\x82\x89\x01a\x01\x80V[\x96\x99\x95\x98P\x93\x96P\x92\x94\x93\x92PPPV\xfe\xa2dipfsX\"\x12 \xc6x\nB\x12@\xa4\xf9q\xc9\xfd\"\x10\xc1\xd2\xdf\xf8h\xab\x9di#M}\xd7\xe6\xb3\x87\x9e\xdcc\xb2dsolcC\x00\x08\r\x003" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( 0 => 1 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( .Set => ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       ( 645326474426547203313410069153905908525362434349 => 491460923342184218035706888008750043977755113263 )
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( .Map => ( 0 |-> 1 ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       ( 0 => 1 )
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> => ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( CALLER_ID:Int =/=K 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=K 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=K 645326474426547203313410069153905908525362434349
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
               )))))))))))))
      [priority(20), label(BASIC-BLOCK-1-TO-3)]
    
    rule [BASIC-BLOCK-3-TO-4]: <foundry>
           <kevm>
             <k>
               #halt
               ~> ( #codeDeposit 491460923342184218035706888008750043977755113263
               ~> #pc [ CREATE ]
               ~> #execute => .K )
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( b"`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x046\x10a\x00+W`\x005`\xe0\x1c\x80cHpIo\x14a\x000W[`\x00\x80\xfd[a\x00Ca\x00>6`\x04a\x01\xccV[a\x00EV[\x00[`\x00T`\xff\x16\x15a\x00\x8dW`@QbF\x1b\xcd`\xe5\x1b\x81R` `\x04\x82\x01R`\x0e`$\x82\x01Rm\x14\x1b\xdc\x9d\x18[\x0e\x88\x1c\x18]\\\xd9Y`\x92\x1b`D\x82\x01R`d\x01`@Q\x80\x91\x03\x90\xfd[\x84`@\x01Q`\x01`\x01`\xa0\x1b\x03\x16\x85` \x01Q`\x01`\x01`\xa0\x1b\x03\x16\x7f\xa9\x98\xe9\xf4+\xe9\xc7\xbd\x87y\x8dY\x90\x93\xd8}\x03\x93\xe0\x8f\xf7B\xa5\x12\xc6#\xaf\xe9\xc6\xa9\xc6\x1f`@Q`@Q\x80\x91\x03\x90\xa3PPPPPV[cNH{q`\xe0\x1b`\x00R`A`\x04R`$`\x00\xfd[`@Q`\xc0\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01\x15Wa\x01\x15a\x00\xdcV[`@R\x90V[`@Q`\x1f\x82\x01`\x1f\x19\x16\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01DWa\x01Da\x00\xdcV[`@R\x91\x90PV[\x805`\x01`\x01`\xa0\x1b\x03\x81\x16\x81\x14a\x01cW`\x00\x80\xfd[\x91\x90PV[`\x00`\x80\x82\x84\x03\x12\x15a\x01zW`\x00\x80\xfd[P\x91\x90PV[`\x00\x80\x83`\x1f\x84\x01\x12a\x01\x92W`\x00\x80\xfd[P\x815g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x15a\x01\xaaW`\x00\x80\xfd[` \x83\x01\x91P\x83` \x82`\x05\x1b\x85\x01\x01\x11\x15a\x01\xc5W`\x00\x80\xfd[\x92P\x92\x90PV[`\x00\x80`\x00\x80`\x00`\xe0\x86\x88\x03\x12\x15a\x01\xe4W`\x00\x80\xfd[\x855g\xff\xff\xff\xff\xff\xff\xff\xff\x80\x82\x11\x15a\x01\xfcW`\x00\x80\xfd[\x90\x87\x01\x90`\xc0\x82\x8a\x03\x12\x15a\x02\x10W`\x00\x80\xfd[a\x02\x18a\x00\xf2V[\x825\x81R` a\x02)\x81\x85\x01a\x01LV[\x81\x83\x01Ra\x029`@\x85\x01a\x01LV[`@\x83\x01R``\x84\x015``\x83\x01R`\x80\x84\x015`\x80\x83\x01R`\xa0\x84\x015\x83\x81\x11\x15a\x02dW`\x00\x80\xfd[\x80\x85\x01\x94PP\x8a`\x1f\x85\x01\x12a\x02yW`\x00\x80\xfd[\x835\x83\x81\x11\x15a\x02\x8bWa\x02\x8ba\x00\xdcV[a\x02\x9d`\x1f\x82\x01`\x1f\x19\x16\x83\x01a\x01\x1bV[\x81\x81R\x8c\x83\x83\x88\x01\x01\x11\x15a\x02\xb1W`\x00\x80\xfd[\x81\x83\x87\x01\x84\x83\x017`\x00\x91\x81\x01\x83\x01\x91\x90\x91R`\xa0\x83\x01R\x90\x97P\x88\x015\x95Pa\x02\xde\x89`@\x8a\x01a\x01hV[\x94P`\xc0\x88\x015\x91P\x80\x82\x11\x15a\x02\xf4W`\x00\x80\xfd[Pa\x03\x01\x88\x82\x89\x01a\x01\x80V[\x96\x99\x95\x98P\x93\x96P\x92\x94\x93\x92PPPV\xfe\xa2dipfsX\"\x12 \xc6x\nB\x12@\xa4\xf9q\xc9\xfd\"\x10\xc1\xd2\xdf\xf8h\xab\x9di#M}\xd7\xe6\xb3\x87\x9e\xdcc\xb2dsolcC\x00\x08\r\x003" => b"" )
                 </output>
                 <statusCode>
                   EVMC_SUCCESS
                 </statusCode>
                 <callStack>
                   ( ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\n\x92T\xe4"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 193 : ( selector ( "setUp()" ) : .WordStack ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x00\x80T`\xff\x19\x16`\x01\x17\x90Ua\x03H\x80a\x00-`\x009`\x00\xf3\xfe`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x046\x10a\x00+W`\x005`\xe0\x1c\x80cHpIo\x14a\x000W[`\x00\x80\xfd[a\x00Ca\x00>6`\x04a\x01\xccV[a\x00EV[\x00[`\x00T`\xff\x16\x15a\x00\x8dW`@QbF\x1b\xcd`\xe5\x1b\x81R` `\x04\x82\x01R`\x0e`$\x82\x01Rm\x14\x1b\xdc\x9d\x18[\x0e\x88\x1c\x18]\\\xd9Y`\x92\x1b`D\x82\x01R`d\x01`@Q\x80\x91\x03\x90\xfd[\x84`@\x01Q`\x01`\x01`\xa0\x1b\x03\x16\x85` \x01Q`\x01`\x01`\xa0\x1b\x03\x16\x7f\xa9\x98\xe9\xf4+\xe9\xc7\xbd\x87y\x8dY\x90\x93\xd8}\x03\x93\xe0\x8f\xf7B\xa5\x12\xc6#\xaf\xe9\xc6\xa9\xc6\x1f`@Q`@Q\x80\x91\x03\x90\xa3PPPPPV[cNH{q`\xe0\x1b`\x00R`A`\x04R`$`\x00\xfd[`@Q`\xc0\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01\x15Wa\x01\x15a\x00\xdcV[`@R\x90V[`@Q`\x1f\x82\x01`\x1f\x19\x16\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01DWa\x01Da\x00\xdcV[`@R\x91\x90PV[\x805`\x01`\x01`\xa0\x1b\x03\x81\x16\x81\x14a\x01cW`\x00\x80\xfd[\x91\x90PV[`\x00`\x80\x82\x84\x03\x12\x15a\x01zW`\x00\x80\xfd[P\x91\x90PV[`\x00\x80\x83`\x1f\x84\x01\x12a\x01\x92W`\x00\x80\xfd[P\x815g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x15a\x01\xaaW`\x00\x80\xfd[` \x83\x01\x91P\x83` \x82`\x05\x1b\x85\x01\x01\x11\x15a\x01\xc5W`\x00\x80\xfd[\x92P\x92\x90PV[`\x00\x80`\x00\x80`\x00`\xe0\x86\x88\x03\x12\x15a\x01\xe4W`\x00\x80\xfd[\x855g\xff\xff\xff\xff\xff\xff\xff\xff\x80\x82\x11\x15a\x01\xfcW`\x00\x80\xfd[\x90\x87\x01\x90`\xc0\x82\x8a\x03\x12\x15a\x02\x10W`\x00\x80\xfd[a\x02\x18a\x00\xf2V[\x825\x81R` a\x02)\x81\x85\x01a\x01LV[\x81\x83\x01Ra\x029`@\x85\x01a\x01LV[`@\x83\x01R``\x84\x015``\x83\x01R`\x80\x84\x015`\x80\x83\x01R`\xa0\x84\x015\x83\x81\x11\x15a\x02dW`\x00\x80\xfd[\x80\x85\x01\x94PP\x8a`\x1f\x85\x01\x12a\x02yW`\x00\x80\xfd[\x835\x83\x81\x11\x15a\x02\x8bWa\x02\x8ba\x00\xdcV[a\x02\x9d`\x1f\x82\x01`\x1f\x19\x16\x83\x01a\x01\x1bV[\x81\x81R\x8c\x83\x83\x88\x01\x01\x11\x15a\x02\xb1W`\x00\x80\xfd[\x81\x83\x87\x01\x84\x83\x017`\x00\x91\x81\x01\x83\x01\x91\x90\x91R`\xa0\x83\x01R\x90\x97P\x88\x015\x95Pa\x02\xde\x89`@\x8a\x01a\x01hV[\x94P`\xc0\x88\x015\x91P\x80\x82\x11\x15a\x02\xf4W`\x00\x80\xfd[Pa\x03\x01\x88\x82\x89\x01a\x01\x80V[\x96\x99\x95\x98P\x93\x96P\x92\x94\x93\x92PPPV\xfe\xa2dipfsX\"\x12 \xc6x\nB\x12@\xa4\xf9q\xc9\xfd\"\x10\xc1\xd2\xdf\xf8h\xab\x9di#M}\xd7\xe6\xb3\x87\x9e\xdcc\xb2dsolcC\x00\x08\r\x003"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) => .List )
                 </callStack>
                 <interimStates>
                   ( ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       SetItem ( 491460923342184218035706888008750043977755113263 )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } ) => .List )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 491460923342184218035706888008750043977755113263 => 728815563385977040452943777879061427756277306518 )
                   </id>
                   <caller>
                     ( 728815563385977040452943777879061427756277306518 => CALLER_ID:Int )
                   </caller>
                   <callData>
                     ( b"" => b"\n\x92T\xe4" )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( selector ( "setUp()" ) : .WordStack ) )
                   </wordStack>
                   <localMem>
                     ( b"`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x046\x10a\x00+W`\x005`\xe0\x1c\x80cHpIo\x14a\x000W[`\x00\x80\xfd[a\x00Ca\x00>6`\x04a\x01\xccV[a\x00EV[\x00[`\x00T`\xff\x16\x15a\x00\x8dW`@QbF\x1b\xcd`\xe5\x1b\x81R` `\x04\x82\x01R`\x0e`$\x82\x01Rm\x14\x1b\xdc\x9d\x18[\x0e\x88\x1c\x18]\\\xd9Y`\x92\x1b`D\x82\x01R`d\x01`@Q\x80\x91\x03\x90\xfd[\x84`@\x01Q`\x01`\x01`\xa0\x1b\x03\x16\x85` \x01Q`\x01`\x01`\xa0\x1b\x03\x16\x7f\xa9\x98\xe9\xf4+\xe9\xc7\xbd\x87y\x8dY\x90\x93\xd8}\x03\x93\xe0\x8f\xf7B\xa5\x12\xc6#\xaf\xe9\xc6\xa9\xc6\x1f`@Q`@Q\x80\x91\x03\x90\xa3PPPPPV[cNH{q`\xe0\x1b`\x00R`A`\x04R`$`\x00\xfd[`@Q`\xc0\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01\x15Wa\x01\x15a\x00\xdcV[`@R\x90V[`@Q`\x1f\x82\x01`\x1f\x19\x16\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01DWa\x01Da\x00\xdcV[`@R\x91\x90PV[\x805`\x01`\x01`\xa0\x1b\x03\x81\x16\x81\x14a\x01cW`\x00\x80\xfd[\x91\x90PV[`\x00`\x80\x82\x84\x03\x12\x15a\x01zW`\x00\x80\xfd[P\x91\x90PV[`\x00\x80\x83`\x1f\x84\x01\x12a\x01\x92W`\x00\x80\xfd[P\x815g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x15a\x01\xaaW`\x00\x80\xfd[` \x83\x01\x91P\x83` \x82`\x05\x1b\x85\x01\x01\x11\x15a\x01\xc5W`\x00\x80\xfd[\x92P\x92\x90PV[`\x00\x80`\x00\x80`\x00`\xe0\x86\x88\x03\x12\x15a\x01\xe4W`\x00\x80\xfd[\x855g\xff\xff\xff\xff\xff\xff\xff\xff\x80\x82\x11\x15a\x01\xfcW`\x00\x80\xfd[\x90\x87\x01\x90`\xc0\x82\x8a\x03\x12\x15a\x02\x10W`\x00\x80\xfd[a\x02\x18a\x00\xf2V[\x825\x81R` a\x02)\x81\x85\x01a\x01LV[\x81\x83\x01Ra\x029`@\x85\x01a\x01LV[`@\x83\x01R``\x84\x015``\x83\x01R`\x80\x84\x015`\x80\x83\x01R`\xa0\x84\x015\x83\x81\x11\x15a\x02dW`\x00\x80\xfd[\x80\x85\x01\x94PP\x8a`\x1f\x85\x01\x12a\x02yW`\x00\x80\xfd[\x835\x83\x81\x11\x15a\x02\x8bWa\x02\x8ba\x00\xdcV[a\x02\x9d`\x1f\x82\x01`\x1f\x19\x16\x83\x01a\x01\x1bV[\x81\x81R\x8c\x83\x83\x88\x01\x01\x11\x15a\x02\xb1W`\x00\x80\xfd[\x81\x83\x87\x01\x84\x83\x017`\x00\x91\x81\x01\x83\x01\x91\x90\x91R`\xa0\x83\x01R\x90\x97P\x88\x015\x95Pa\x02\xde\x89`@\x8a\x01a\x01hV[\x94P`\xc0\x88\x015\x91P\x80\x82\x11\x15a\x02\xf4W`\x00\x80\xfd[Pa\x03\x01\x88\x82\x89\x01a\x01\x80V[\x96\x99\x95\x98P\x93\x96P\x92\x94\x93\x92PPPV\xfe\xa2dipfsX\"\x12 \xc6x\nB\x12@\xa4\xf9q\xc9\xfd\"\x10\xc1\xd2\xdf\xf8h\xab\x9di#M}\xd7\xe6\xb3\x87\x9e\xdcc\xb2dsolcC\x00\x08\r\x003" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x00\x80T`\xff\x19\x16`\x01\x17\x90Ua\x03H\x80a\x00-`\x009`\x00\xf3\xfe`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x046\x10a\x00+W`\x005`\xe0\x1c\x80cHpIo\x14a\x000W[`\x00\x80\xfd[a\x00Ca\x00>6`\x04a\x01\xccV[a\x00EV[\x00[`\x00T`\xff\x16\x15a\x00\x8dW`@QbF\x1b\xcd`\xe5\x1b\x81R` `\x04\x82\x01R`\x0e`$\x82\x01Rm\x14\x1b\xdc\x9d\x18[\x0e\x88\x1c\x18]\\\xd9Y`\x92\x1b`D\x82\x01R`d\x01`@Q\x80\x91\x03\x90\xfd[\x84`@\x01Q`\x01`\x01`\xa0\x1b\x03\x16\x85` \x01Q`\x01`\x01`\xa0\x1b\x03\x16\x7f\xa9\x98\xe9\xf4+\xe9\xc7\xbd\x87y\x8dY\x90\x93\xd8}\x03\x93\xe0\x8f\xf7B\xa5\x12\xc6#\xaf\xe9\xc6\xa9\xc6\x1f`@Q`@Q\x80\x91\x03\x90\xa3PPPPPV[cNH{q`\xe0\x1b`\x00R`A`\x04R`$`\x00\xfd[`@Q`\xc0\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01\x15Wa\x01\x15a\x00\xdcV[`@R\x90V[`@Q`\x1f\x82\x01`\x1f\x19\x16\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01DWa\x01Da\x00\xdcV[`@R\x91\x90PV[\x805`\x01`\x01`\xa0\x1b\x03\x81\x16\x81\x14a\x01cW`\x00\x80\xfd[\x91\x90PV[`\x00`\x80\x82\x84\x03\x12\x15a\x01zW`\x00\x80\xfd[P\x91\x90PV[`\x00\x80\x83`\x1f\x84\x01\x12a\x01\x92W`\x00\x80\xfd[P\x815g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x15a\x01\xaaW`\x00\x80\xfd[` \x83\x01\x91P\x83` \x82`\x05\x1b\x85\x01\x01\x11\x15a\x01\xc5W`\x00\x80\xfd[\x92P\x92\x90PV[`\x00\x80`\x00\x80`\x00`\xe0\x86\x88\x03\x12\x15a\x01\xe4W`\x00\x80\xfd[\x855g\xff\xff\xff\xff\xff\xff\xff\xff\x80\x82\x11\x15a\x01\xfcW`\x00\x80\xfd[\x90\x87\x01\x90`\xc0\x82\x8a\x03\x12\x15a\x02\x10W`\x00\x80\xfd[a\x02\x18a\x00\xf2V[\x825\x81R` a\x02)\x81\x85\x01a\x01LV[\x81\x83\x01Ra\x029`@\x85\x01a\x01LV[`@\x83\x01R``\x84\x015``\x83\x01R`\x80\x84\x015`\x80\x83\x01R`\xa0\x84\x015\x83\x81\x11\x15a\x02dW`\x00\x80\xfd[\x80\x85\x01\x94PP\x8a`\x1f\x85\x01\x12a\x02yW`\x00\x80\xfd[\x835\x83\x81\x11\x15a\x02\x8bWa\x02\x8ba\x00\xdcV[a\x02\x9d`\x1f\x82\x01`\x1f\x19\x16\x83\x01a\x01\x1bV[\x81\x81R\x8c\x83\x83\x88\x01\x01\x11\x15a\x02\xb1W`\x00\x80\xfd[\x81\x83\x87\x01\x84\x83\x017`\x00\x91\x81\x01\x83\x01\x91\x90\x91R`\xa0\x83\x01R\x90\x97P\x88\x015\x95Pa\x02\xde\x89`@\x8a\x01a\x01hV[\x94P`\xc0\x88\x015\x91P\x80\x82\x11\x15a\x02\xf4W`\x00\x80\xfd[Pa\x03\x01\x88\x82\x89\x01a\x01\x80V[\x96\x99\x95\x98P\x93\x96P\x92\x94\x93\x92PPPV\xfe\xa2dipfsX\"\x12 \xc6x\nB\x12@\xa4\xf9q\xc9\xfd\"\x10\xc1\xd2\xdf\xf8h\xab\x9di#M}\xd7\xe6\xb3\x87\x9e\xdcc\xb2dsolcC\x00\x08\r\x003" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( 1 => 0 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( .Map => ( 27 |-> 491460923342184218035706888008750043977755113263 ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( CALLER_ID:Int =/=K 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=K 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=K 645326474426547203313410069153905908525362434349
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
               )))))))))))))
      [priority(20), label(BASIC-BLOCK-3-TO-4)]
    
    rule [BASIC-BLOCK-4-TO-5]: <foundry>
           <kevm>
             <k>
               ( #halt => #execute )
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   ( EVMC_SUCCESS => ?_STATUSCODE )
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   ( ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) => .Set )
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     ( b"\n\x92T\xe4" => b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , ?VV6__l2OutputIndex_114b9705 ) +Bytes #buf ( 32 , ?VV7_version_114b9705 ) +Bytes #buf ( 32 , ?VV8_stateRoot_114b9705 ) +Bytes #buf ( 32 , ?VV9_messagePasserStorageRoot_114b9705 ) +Bytes #buf ( 32 , ?VV10_latestBlockhash_114b9705 ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( ?VV5_data_114b9705 ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , ?VV0_nonce_114b9705 ) +Bytes #buf ( 32 , ?VV1_sender_114b9705 ) +Bytes #buf ( 32 , ?VV2_target_114b9705 ) +Bytes #buf ( 32 , ?VV3_value_114b9705 ) +Bytes #buf ( 32 , ?VV4_gasLimit_114b9705 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( ?VV5_data_114b9705 ) ) +Bytes ?VV5_data_114b9705 +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( ?VV5_data_114b9705 ) +Int maxUInt5 ) ) -Int lengthBytes ( ?VV5_data_114b9705 ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes ?VV11__withdrawalProof_0_114b9705 )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( selector ( "setUp()" ) : .WordStack ) => .WordStack )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x00\x80T`\xff\x19\x16`\x01\x17\x90Ua\x03H\x80a\x00-`\x009`\x00\xf3\xfe`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x046\x10a\x00+W`\x005`\xe0\x1c\x80cHpIo\x14a\x000W[`\x00\x80\xfd[a\x00Ca\x00>6`\x04a\x01\xccV[a\x00EV[\x00[`\x00T`\xff\x16\x15a\x00\x8dW`@QbF\x1b\xcd`\xe5\x1b\x81R` `\x04\x82\x01R`\x0e`$\x82\x01Rm\x14\x1b\xdc\x9d\x18[\x0e\x88\x1c\x18]\\\xd9Y`\x92\x1b`D\x82\x01R`d\x01`@Q\x80\x91\x03\x90\xfd[\x84`@\x01Q`\x01`\x01`\xa0\x1b\x03\x16\x85` \x01Q`\x01`\x01`\xa0\x1b\x03\x16\x7f\xa9\x98\xe9\xf4+\xe9\xc7\xbd\x87y\x8dY\x90\x93\xd8}\x03\x93\xe0\x8f\xf7B\xa5\x12\xc6#\xaf\xe9\xc6\xa9\xc6\x1f`@Q`@Q\x80\x91\x03\x90\xa3PPPPPV[cNH{q`\xe0\x1b`\x00R`A`\x04R`$`\x00\xfd[`@Q`\xc0\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01\x15Wa\x01\x15a\x00\xdcV[`@R\x90V[`@Q`\x1f\x82\x01`\x1f\x19\x16\x81\x01g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x82\x82\x10\x17\x15a\x01DWa\x01Da\x00\xdcV[`@R\x91\x90PV[\x805`\x01`\x01`\xa0\x1b\x03\x81\x16\x81\x14a\x01cW`\x00\x80\xfd[\x91\x90PV[`\x00`\x80\x82\x84\x03\x12\x15a\x01zW`\x00\x80\xfd[P\x91\x90PV[`\x00\x80\x83`\x1f\x84\x01\x12a\x01\x92W`\x00\x80\xfd[P\x815g\xff\xff\xff\xff\xff\xff\xff\xff\x81\x11\x15a\x01\xaaW`\x00\x80\xfd[` \x83\x01\x91P\x83` \x82`\x05\x1b\x85\x01\x01\x11\x15a\x01\xc5W`\x00\x80\xfd[\x92P\x92\x90PV[`\x00\x80`\x00\x80`\x00`\xe0\x86\x88\x03\x12\x15a\x01\xe4W`\x00\x80\xfd[\x855g\xff\xff\xff\xff\xff\xff\xff\xff\x80\x82\x11\x15a\x01\xfcW`\x00\x80\xfd[\x90\x87\x01\x90`\xc0\x82\x8a\x03\x12\x15a\x02\x10W`\x00\x80\xfd[a\x02\x18a\x00\xf2V[\x825\x81R` a\x02)\x81\x85\x01a\x01LV[\x81\x83\x01Ra\x029`@\x85\x01a\x01LV[`@\x83\x01R``\x84\x015``\x83\x01R`\x80\x84\x015`\x80\x83\x01R`\xa0\x84\x015\x83\x81\x11\x15a\x02dW`\x00\x80\xfd[\x80\x85\x01\x94PP\x8a`\x1f\x85\x01\x12a\x02yW`\x00\x80\xfd[\x835\x83\x81\x11\x15a\x02\x8bWa\x02\x8ba\x00\xdcV[a\x02\x9d`\x1f\x82\x01`\x1f\x19\x16\x83\x01a\x01\x1bV[\x81\x81R\x8c\x83\x83\x88\x01\x01\x11\x15a\x02\xb1W`\x00\x80\xfd[\x81\x83\x87\x01\x84\x83\x017`\x00\x91\x81\x01\x83\x01\x91\x90\x91R`\xa0\x83\x01R\x90\x97P\x88\x015\x95Pa\x02\xde\x89`@\x8a\x01a\x01hV[\x94P`\xc0\x88\x015\x91P\x80\x82\x11\x15a\x02\xf4W`\x00\x80\xfd[Pa\x03\x01\x88\x82\x89\x01a\x01\x80V[\x96\x99\x95\x98P\x93\x96P\x92\x94\x93\x92PPPV\xfe\xa2dipfsX\"\x12 \xc6x\nB\x12@\xa4\xf9q\xc9\xfd\"\x10\xc1\xd2\xdf\xf8h\xab\x9di#M}\xd7\xe6\xb3\x87\x9e\xdcc\xb2dsolcC\x00\x08\r\x003" => b"" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) => .Set )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( CALLER_ID:Int =/=K 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=K 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=K 645326474426547203313410069153905908525362434349
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
               )))))))))))))
       ensures ( 0 <=Int ?VV0_nonce_114b9705
       andBool ( 0 <=Int ?VV3_value_114b9705
       andBool ( 32 ==K lengthBytes ( ?VV11__withdrawalProof_0_114b9705 )
       andBool ( 0 <=Int ?VV1_sender_114b9705
       andBool ( 0 <=Int ?VV2_target_114b9705
       andBool ( 0 <=Int ?VV7_version_114b9705
       andBool ( 0 <=Int ?VV4_gasLimit_114b9705
       andBool ( 0 <=Int ?VV8_stateRoot_114b9705
       andBool ( 0 <=Int ?VV6__l2OutputIndex_114b9705
       andBool ( 0 <=Int ?VV10_latestBlockhash_114b9705
       andBool ( 0 <=Int ?VV9_messagePasserStorageRoot_114b9705
       andBool ( ?VV1_sender_114b9705 <Int pow160
       andBool ( ?VV2_target_114b9705 <Int pow160
       andBool ( ?VV0_nonce_114b9705 <Int pow256
       andBool ( ?VV3_value_114b9705 <Int pow256
       andBool ( ?VV7_version_114b9705 <Int pow256
       andBool ( ?VV4_gasLimit_114b9705 <Int pow256
       andBool ( ?VV8_stateRoot_114b9705 <Int pow256
       andBool ( ?VV6__l2OutputIndex_114b9705 <Int pow256
       andBool ( ?VV10_latestBlockhash_114b9705 <Int pow256
       andBool ( ?VV9_messagePasserStorageRoot_114b9705 <Int pow256
       andBool ( lengthBytes ( ?VV5_data_114b9705 ) <=Int 1073741824
       andBool ( lengthBytes ( ?VV5_data_114b9705 ) <Int pow64
               )))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-4-TO-5)]
    
    rule [BASIC-BLOCK-5-TO-7]: <foundry>
           <kevm>
             <k>
               ( .K => #pc [ MLOAD ] ~> .K )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( 320 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 32 ) : ( 3144 : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 32 : ( 128 : ( maxUInt64 : ( 420 : ( 0 : ( 0 : ( 0 : ( 0 : ( 0 : ( 4 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) : ( 337 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     .Set
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 32 ==K lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int =/=K 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=K 645326474426547203313410069153905908525362434349
       andBool ( CONTRACT_ID:Int =/=K 645326474426547203313410069153905908525362434349
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
               ))))))))))))))))))))))))))))))))))))
       ensures ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( CONTRACT_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
               ))))))))
      [priority(20), label(BASIC-BLOCK-5-TO-7)]
    
    rule [BASIC-BLOCK-7-TO-8]: <foundry>
           <kevm>
             <k>
               ( #pc [ MLOAD ] => #next [ SUB ] )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 320 => pow160 ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 32 ) => 1 ) : ( ( 3144 => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) : ( ( lengthBytes ( VV5_data_114b9705:Bytes ) => 491460923342184218035706888008750043977755113263 ) : ( ( 32 => selector ( "expectRevert()" ) ) : ( ( 128 => 645326474426547203313410069153905908525362434349 ) : ( ( maxUInt64 => 1 ) : ( ( 420 => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) ) : ( ( 0 => 68 ) : ( ( 0 => VV6__l2OutputIndex_114b9705:Int ) : ( ( 0 => 128 ) : ( ( 0 => 193 ) : ( ( 0 => selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( 4 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) : ( 337 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) => .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ) +Bytes #buf ( 32 , ( VV0_nonce_114b9705:Int => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) ) +Bytes ( #buf ( 32 , VV1_sender_114b9705:Int ) => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ) +Bytes #buf ( 32 , ( VV2_target_114b9705:Int => VV0_nonce_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV3_value_114b9705:Int => VV1_sender_114b9705:Int ) ) +Bytes ( #buf ( 32 , VV4_gasLimit_114b9705:Int ) => #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( .Set => SetItem ( 645326474426547203313410069153905908525362434349 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ( false => true )
               </isRevertExpected>
               <expectedReason>
                 ( _EXPECTEDREASON_CELL => b"" )
               </expectedReason>
               <expectedDepth>
                 ( _EXPECTEDDEPTH_CELL => 0 )
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
               ))))))))))))))))))))))))))))))))))))))
       ensures ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
               ))
      [priority(20), label(BASIC-BLOCK-7-TO-8)]
    
    rule [BASIC-BLOCK-8-TO-9]: <foundry>
           <kevm>
             <k>
               ( #next [ SUB ] ~> .K => JUMPI 2537 bool2Word ( VV5_data_114b9705:Bytes ~> .K ==K b"" ~> .K )
               ~> #pc [ JUMPI ] )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( pow160 => 0 ) : ( ( 1 => 352 ) : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( 352 => 804 ) ) : ( ( 491460923342184218035706888008750043977755113263 => lengthBytes ( VV5_data_114b9705:Bytes ) ) : ( ( selector ( "expectRevert()" ) => 2582 ) : ( ( 645326474426547203313410069153905908525362434349 => lengthBytes ( VV5_data_114b9705:Bytes ) ) : ( ( 1 => 0 ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) => 320 ) : ( ( 68 => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 772 ) ) : ( ( VV6__l2OutputIndex_114b9705:Int => 3714 ) : ( ( 128 => 320 ) : ( ( 193 => 0 ) : ( ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 356 ) ) : ( .WordStack => ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 2088 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes ( b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
               ))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-8-TO-9)]
    
    rule [BASIC-BLOCK-10-TO-12]: <foundry>
           <kevm>
             <k>
               ( JUMPI 2537 bool2Word ( VV5_data_114b9705:Bytes ~> .K ==K b"" ~> .K )
               ~> #pc [ JUMPI ] => .K )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes ( #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " ) +Bytes ( #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes => VV11__withdrawalProof_0_114b9705:Bytes )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 932 ) : ( ( 352 => selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 804 ) => 491460923342184218035706888008750043977755113263 ) : ( ( lengthBytes ( VV5_data_114b9705:Bytes ) => 1 ) : ( ( 2582 => 484 ) : ( ( lengthBytes ( VV5_data_114b9705:Bytes ) => 68 ) : ( ( 0 => VV6__l2OutputIndex_114b9705:Int ) : ( ( 320 => 128 ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 772 ) => 193 ) : ( ( 3714 => selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( 320 : ( 0 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 356 ) : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 2088 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ) +Bytes #buf ( 32 , ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) => VV0_nonce_114b9705:Int ) ) +Bytes ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => #buf ( 32 , VV1_sender_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV0_nonce_114b9705:Int => VV2_target_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV1_sender_114b9705:Int => VV3_value_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV2_target_114b9705:Int => VV4_gasLimit_114b9705:Int ) ) +Bytes ( #buf ( 32 , VV3_value_114b9705:Int ) => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" ) +Bytes #buf ( 32 , ( VV4_gasLimit_114b9705:Int => VV6__l2OutputIndex_114b9705:Int ) ) +Bytes ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" => #buf ( 32 , VV7_version_114b9705:Int ) ) +Bytes #buf ( 32 , ( lengthBytes ( VV5_data_114b9705:Bytes ) => VV8_stateRoot_114b9705:Int ) ) +Bytes ( VV5_data_114b9705:Bytes => #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) ) +Bytes #buf ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) => 32 ) , ( 0 => VV10_latestBlockhash_114b9705:Int ) ) +Bytes ( b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " ) +Bytes ( #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) => VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV5_data_114b9705:Bytes ~> .K ==K b"" ~> .K
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
               )))))))))))))))))))))))))))))))))))))))))
       ensures VV5_data_114b9705:Bytes ==K b""
      [priority(20), label(BASIC-BLOCK-10-TO-12)]
    
    rule [BASIC-BLOCK-11-TO-13]: <foundry>
           <kevm>
             <k>
               JUMPI 2537 bool2Word ( ( VV5_data_114b9705:Bytes ~> .K ==K b"" ~> .K => lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32 ) )
               ~> #pc [ JUMPI ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 32 ) : ( 352 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 804 ) : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 2582 : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 0 : ( 320 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 772 ) : ( 3714 : ( 320 : ( 0 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 356 ) : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 2088 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes ( #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) => #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 , 32 ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
               )))))))))))))))))))))))))))))))))))))))))
       ensures VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
      [priority(20), label(BASIC-BLOCK-11-TO-13)]
    
    rule [BASIC-BLOCK-12-TO-14]: <foundry>
           <kevm>
             <k>
               ( .K => notMaxUInt5
               ~> #push
               ~> #pc [ NOT ]
               ~> #execute
               ~> #return 352 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput 352 0 )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ( .List => ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 932 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( 484 : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) )
                 </callStack>
                 <interimStates>
                   ( .List => ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } ) )
                 </interimStates>
                 <touchedAccounts>
                   ( .Set => ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 728815563385977040452943777879061427756277306518 => 491460923342184218035706888008750043977755113263 )
                   </id>
                   <caller>
                     ( CALLER_ID:Int => 728815563385977040452943777879061427756277306518 )
                   </caller>
                   <callData>
                     ( b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" => b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" ) +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 932 => maxUInt5 ) : ( ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) => 669 ) : ( ( 491460923342184218035706888008750043977755113263 => 0 ) : ( ( 1 => 32 ) : ( ( 484 => 128 ) : ( ( 68 => maxUInt64 ) : ( ( VV6__l2OutputIndex_114b9705:Int => 420 ) : ( ( 128 => 0 ) : ( ( 193 => 0 ) : ( ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) => 0 ) : ( .WordStack => ( 0 : ( 0 : ( 4 : ( 580 : ( 62 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes ( #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => #buf ( 32 , VV4_gasLimit_114b9705:Int ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( 0 => 1 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 645326474426547203313410069153905908525362434349 ) => ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( _VV5_data_114b9705 ==K b""
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
               )))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-12-TO-14)]
    
    rule [BASIC-BLOCK-14-TO-17]: <foundry>
           <kevm>
             <k>
               ( notMaxUInt5
               ~> #push
               ~> #pc [ NOT ]
               ~> #execute => #halt ~> .K )
               ~> #return 352 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput 352 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( b"" => b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                 </output>
                 <statusCode>
                   ( _STATUSCODE => EVMC_REVERT )
                 </statusCode>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 932 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( 484 : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( maxUInt5 => 1 ) : ( ( 669 => 484 ) : ( ( 0 => 68 ) : ( ( 32 => VV6__l2OutputIndex_114b9705:Int ) : ( 128 : ( ( maxUInt64 => 67 ) : ( ( 420 => selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( 0 : ( 0 : ( 0 : ( 0 : ( 0 : ( 4 : ( 580 : ( 62 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes ( #buf ( 32 , VV4_gasLimit_114b9705:Int ) => #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( _VV5_data_114b9705 ==K b""
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
               )))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-14-TO-17)]
    
    rule [BASIC-BLOCK-15-TO-19]: <foundry>
           <kevm>
             <k>
               ( JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32 )
               ~> #pc [ JUMPI ] => .K )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 32 : ( 352 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 804 ) : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 2582 : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 0 : ( 320 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 772 ) : ( 3714 : ( 320 : ( 0 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 356 ) : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 2088 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes ( #range ( VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 , 32 ) => VV5_data_114b9705:Bytes +Bytes #range ( #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 , ( 32 -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
               ))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-15-TO-19)]
    
    rule [BASIC-BLOCK-16-TO-20]: <foundry>
           <kevm>
             <k>
               JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int ( 32 => 64 ) )
               ~> #pc [ JUMPI ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 32 => 64 ) : ( 352 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 804 ) : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 2582 : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 0 : ( 320 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 772 ) : ( 3714 : ( 320 : ( 0 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 356 ) : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 2088 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes ( #range ( VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 , 32 ) => #range ( VV5_data_114b9705:Bytes , 0 , 32 ) +Bytes #range ( #range ( VV5_data_114b9705:Bytes , 32 , ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int -32 ) ) +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) , 0 , 32 ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32 )
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
               ))))))))))))))))))))))))))))))))))))))))))
       ensures 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
      [priority(20), label(BASIC-BLOCK-16-TO-20)]
    
    rule [BASIC-BLOCK-17-TO-21]: <foundry>
           <kevm>
             <k>
               #halt
               ~> ( #return 352 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput 352 0
               ~> #execute => .K )
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"" )
                 </output>
                 <statusCode>
                   ( EVMC_REVERT => EVMC_SUCCESS )
                 </statusCode>
                 <callStack>
                   ( ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 932 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( 484 : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) => .List )
                 </callStack>
                 <interimStates>
                   ( ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } ) => .List )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 491460923342184218035706888008750043977755113263 => 728815563385977040452943777879061427756277306518 )
                   </id>
                   <caller>
                     ( 728815563385977040452943777879061427756277306518 => CALLER_ID:Int )
                   </caller>
                   <callData>
                     ( b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" => b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" ) +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 1 => selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( 484 : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) => .WordStack ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( 1 => 0 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) => SetItem ( 645326474426547203313410069153905908525362434349 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ( true => false )
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( _VV5_data_114b9705 ==K b""
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
               )))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-17-TO-21)]
    
    rule [BASIC-BLOCK-23-TO-25]: <foundry>
           <kevm>
             <k>
               JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int ( 64 => 96 ) )
               ~> #pc [ JUMPI ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 64 => 96 ) : ( 352 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 804 ) : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 2582 : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 0 : ( 320 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 772 ) : ( 3714 : ( 320 : ( 0 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 356 ) : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 2088 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , ( 32 => 64 ) ) +Bytes #range ( #range ( VV5_data_114b9705:Bytes , ( 32 => 64 ) , ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int ( -32 => -64 ) ) ) +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , ( 32 => 64 ) ) , 0 , 32 )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64 )
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
               ))))))))))))))))))))))))))))))))))))))))))
       ensures 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
      [priority(20), label(BASIC-BLOCK-23-TO-25)]
    
    rule [BASIC-BLOCK-22-TO-30]: <foundry>
           <kevm>
             <k>
               ( JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64 )
               ~> #pc [ JUMPI ] => .K )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 64 : ( 352 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 804 ) : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 2582 : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 0 : ( 320 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 772 ) : ( 3714 : ( 320 : ( 0 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 356 ) : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 2088 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes ( #range ( VV5_data_114b9705:Bytes , 0 , 32 ) => VV5_data_114b9705:Bytes ) +Bytes #range ( ( #range ( VV5_data_114b9705:Bytes , 32 , ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int -32 ) ) => #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) ) +Bytes ( #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) => b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ) +Bytes ( b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => #buf ( 32 , VV0_nonce_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV0_nonce_114b9705:Int => VV1_sender_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV1_sender_114b9705:Int => VV2_target_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV2_target_114b9705:Int => VV3_value_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV3_value_114b9705:Int => VV4_gasLimit_114b9705:Int ) ) +Bytes ( #buf ( 32 , VV4_gasLimit_114b9705:Int ) => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" ) +Bytes ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" => #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ) +Bytes ( #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) => #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ) , 0 , ( 32 => ( 64 -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
               ))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-22-TO-30)]
    
    rule [BASIC-BLOCK-28-TO-31]: <foundry>
           <kevm>
             <k>
               ( JUMPI 2537 bool2Word ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96 )
               ~> #pc [ JUMPI ] => .K )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 96 : ( 352 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 804 ) : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 2582 : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 0 : ( 320 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 772 ) : ( 3714 : ( 320 : ( 0 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 356 ) : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 2088 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes ( #range ( VV5_data_114b9705:Bytes , 0 , 64 ) => VV5_data_114b9705:Bytes ) +Bytes #range ( ( #range ( VV5_data_114b9705:Bytes , 64 , ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int -64 ) ) => #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) ) +Bytes ( #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) => b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ) +Bytes ( b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => #buf ( 32 , VV0_nonce_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV0_nonce_114b9705:Int => VV1_sender_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV1_sender_114b9705:Int => VV2_target_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV2_target_114b9705:Int => VV3_value_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV3_value_114b9705:Int => VV4_gasLimit_114b9705:Int ) ) +Bytes ( #buf ( 32 , VV4_gasLimit_114b9705:Int ) => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" ) +Bytes ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" => #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ) +Bytes ( #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) => #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ) , 0 , ( 32 => ( 96 -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
               )))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-28-TO-31)]
    
    rule [BASIC-BLOCK-32-TO-33]: <foundry>
           <kevm>
             <k>
               ( .K => JUMPI 2552 bool2Word ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes ) )
               ~> #pc [ JUMPI ] )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( V_2f51df73:Int : ( 352 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 804 ) : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 2582 : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 0 : ( 320 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 772 ) : ( 3714 : ( 320 : ( 0 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 356 ) : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 2088 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #range ( #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes V_2203fc51:Bytes , 0 , ( V_2f51df73:Int -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73 ==K V_c9acfbf7:Int
           andBool ( V_2203fc51 ==K V_fafcb44a:Bytes
           andBool ( ( ( V_c9acfbf7 ==K 32
               andBool ( V_fafcb44a ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) )
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7 ==K 64
               andBool ( V_fafcb44a ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 )
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73 ==K 96
           andBool ( V_2203fc51 ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 )
           andBool ( CONTRACT_ID:Int =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               ))))))))))))))))))))))))))))))))))))))))
       ensures ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
         andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
         andBool ( ( ( V_c9acfbf7:Int ==Int 32
             andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
             andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
             andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                     ))))
            orBool ( ( V_c9acfbf7:Int ==Int 64
             andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
             andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
             andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                     ))))
                   ))
                 )))
        orBool ( ( V_2f51df73:Int ==Int 96
         andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
         andBool ( CONTRACT_ID:Int =/=Int 645326474426547203313410069153905908525362434349
         andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
         andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
         andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                 ))))))
               ))
      [priority(20), label(BASIC-BLOCK-32-TO-33)]
    
    rule [BASIC-BLOCK-34-TO-36]: <foundry>
           <kevm>
             <k>
               ( JUMPI 2552 bool2Word ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes ) )
               ~> #pc [ JUMPI ] => #accessAccounts 491460923342184218035706888008750043977755113263
               ~> 840
               ~> #push
               ~> #pc [ EXTCODESIZE ] )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( V_2f51df73:Int => 491460923342184218035706888008750043977755113263 ) : ( ( 352 => 0 ) : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( 804 => 352 ) ) : ( ( lengthBytes ( VV5_data_114b9705:Bytes ) => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) ) : ( ( 2582 => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) : ( ( lengthBytes ( VV5_data_114b9705:Bytes ) => 0 ) : ( ( 0 => ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) ) : ( ( 320 => selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 772 ) => 491460923342184218035706888008750043977755113263 ) : ( ( 3714 => 1 ) : ( ( 320 => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) ) : ( ( 0 => 68 ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 356 ) => VV6__l2OutputIndex_114b9705:Int ) : ( ( 1 => 128 ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) => 193 ) : ( ( 68 => selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 2088 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes ( b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" ) +Bytes #buf ( 32 , ( VV0_nonce_114b9705:Int => VV6__l2OutputIndex_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV1_sender_114b9705:Int => VV7_version_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV2_target_114b9705:Int => VV8_stateRoot_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV3_value_114b9705:Int => VV9_messagePasserStorageRoot_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV4_gasLimit_114b9705:Int => VV10_latestBlockhash_114b9705:Int ) ) +Bytes ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" => #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) ) +Bytes #buf ( 32 , ( lengthBytes ( VV5_data_114b9705:Bytes ) => VV0_nonce_114b9705:Int ) ) +Bytes ( VV5_data_114b9705:Bytes => #buf ( 32 , VV1_sender_114b9705:Int ) ) +Bytes ( #range ( #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes V_2203fc51:Bytes , 0 , ( V_2f51df73:Int -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) ) => #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-34-TO-36)]
    
    rule [BASIC-BLOCK-35-TO-37]: <foundry>
           <kevm>
             <k>
               ( JUMPI 2552 bool2Word ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes ) )
               ~> #pc [ JUMPI ] => #next [ DUP ( 2 ) ] ~> .K )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( V_2f51df73:Int => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) ) : ( ( 352 => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 804 ) => 0 ) : ( ( lengthBytes ( VV5_data_114b9705:Bytes ) => ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) ) : ( ( 2582 => selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( lengthBytes ( VV5_data_114b9705:Bytes ) => 491460923342184218035706888008750043977755113263 ) : ( ( 0 => 1 ) : ( ( 320 => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 772 ) => 68 ) : ( ( 3714 => VV6__l2OutputIndex_114b9705:Int ) : ( ( 320 => 128 ) : ( ( 0 => 193 ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 356 ) => selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 2088 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes ( b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" ) +Bytes #buf ( 32 , ( VV0_nonce_114b9705:Int => VV6__l2OutputIndex_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV1_sender_114b9705:Int => VV7_version_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV2_target_114b9705:Int => VV8_stateRoot_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV3_value_114b9705:Int => VV9_messagePasserStorageRoot_114b9705:Int ) ) +Bytes #buf ( 32 , ( VV4_gasLimit_114b9705:Int => VV10_latestBlockhash_114b9705:Int ) ) +Bytes ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" => #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) ) +Bytes #buf ( 32 , ( lengthBytes ( VV5_data_114b9705:Bytes ) => VV0_nonce_114b9705:Int ) ) +Bytes ( VV5_data_114b9705:Bytes => #buf ( 32 , VV1_sender_114b9705:Int ) ) +Bytes ( #range ( #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes V_2203fc51:Bytes , 0 , ( V_2f51df73:Int -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) ) => #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes ) )
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
       ensures lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
      [priority(20), label(BASIC-BLOCK-35-TO-37)]
    
    rule [BASIC-BLOCK-36-TO-38]: <foundry>
           <kevm>
             <k>
               ( #accessAccounts 491460923342184218035706888008750043977755113263
               ~> 840
               ~> #push
               ~> #pc [ EXTCODESIZE ] => CALL 0 491460923342184218035706888008750043977755113263 0 ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 491460923342184218035706888008750043977755113263 => ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) ) : ( ( 0 => selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) => 491460923342184218035706888008750043977755113263 ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) => 1 ) : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( 352 => 484 ) ) : ( ( 0 => 68 ) : ( ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) => VV6__l2OutputIndex_114b9705:Int ) : ( ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) => 128 ) : ( ( 491460923342184218035706888008750043977755113263 => 193 ) : ( ( 1 => selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 645326474426547203313410069153905908525362434349 ) => ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-36-TO-38)]
    
    rule [BASIC-BLOCK-37-TO-39]: <foundry>
           <kevm>
             <k>
               ( #next [ DUP ( 2 ) ] ~> .K => CALL 0 491460923342184218035706888008750043977755113263 0 ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) ) +Int ( 580 => 932 ) ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) => selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( 0 => 491460923342184218035706888008750043977755113263 ) : ( ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) => 1 ) : ( ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) => ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) ) : ( ( 491460923342184218035706888008750043977755113263 => 68 ) : ( ( 1 => VV6__l2OutputIndex_114b9705:Int ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) => 128 ) : ( ( 68 => 193 ) : ( ( VV6__l2OutputIndex_114b9705:Int => selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) => .WordStack ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 645326474426547203313410069153905908525362434349 ) => ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-37-TO-39)]
    
    rule [BASIC-BLOCK-38-TO-40]: <foundry>
           <kevm>
             <k>
               ( CALL 0 491460923342184218035706888008750043977755113263 0 ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 ~> .K => #accessAccounts 491460923342184218035706888008750043977755113263
               ~> #checkCall 728815563385977040452943777879061427756277306518 0
               ~> #call 728815563385977040452943777879061427756277306518 491460923342184218035706888008750043977755113263 491460923342184218035706888008750043977755113263 0 0 b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes false
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 )
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-38-TO-40)]
    
    rule [BASIC-BLOCK-39-TO-41]: <foundry>
           <kevm>
             <k>
               ( CALL 0 491460923342184218035706888008750043977755113263 0 ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 ~> .K => #accessAccounts 491460923342184218035706888008750043977755113263
               ~> #checkCall 728815563385977040452943777879061427756277306518 0
               ~> #call 728815563385977040452943777879061427756277306518 491460923342184218035706888008750043977755113263 491460923342184218035706888008750043977755113263 0 0 b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes false
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 )
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-39-TO-41)]
    
    rule [BASIC-BLOCK-40-TO-42]: <foundry>
           <kevm>
             <k>
               ( #accessAccounts 491460923342184218035706888008750043977755113263
               ~> #checkCall 728815563385977040452943777879061427756277306518 0
               ~> #call 728815563385977040452943777879061427756277306518 491460923342184218035706888008750043977755113263 491460923342184218035706888008750043977755113263 0 0 b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes false => #precompiled? ( 491460923342184218035706888008750043977755113263 , SHANGHAI )
               ~> #execute )
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ( .List => ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) )
                 </callStack>
                 <interimStates>
                   ( .List => ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } ) )
                 </interimStates>
                 <touchedAccounts>
                   ( .Set => ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 728815563385977040452943777879061427756277306518 => 491460923342184218035706888008750043977755113263 )
                   </id>
                   <caller>
                     ( CALLER_ID:Int => 728815563385977040452943777879061427756277306518 )
                   </caller>
                   <callData>
                     ( b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" => b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" ) +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) => .WordStack )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( 0 => 1 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) => ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-40-TO-42)]
    
    rule [BASIC-BLOCK-41-TO-43]: <foundry>
           <kevm>
             <k>
               ( #accessAccounts 491460923342184218035706888008750043977755113263
               ~> #checkCall 728815563385977040452943777879061427756277306518 0
               ~> #call 728815563385977040452943777879061427756277306518 491460923342184218035706888008750043977755113263 491460923342184218035706888008750043977755113263 0 0 b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes false => #precompiled? ( 491460923342184218035706888008750043977755113263 , SHANGHAI )
               ~> #execute )
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ( .List => ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) )
                 </callStack>
                 <interimStates>
                   ( .List => ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } ) )
                 </interimStates>
                 <touchedAccounts>
                   ( .Set => ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 728815563385977040452943777879061427756277306518 => 491460923342184218035706888008750043977755113263 )
                   </id>
                   <caller>
                     ( CALLER_ID:Int => 728815563385977040452943777879061427756277306518 )
                   </caller>
                   <callData>
                     ( b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" => b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" ) +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) => .WordStack )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( 0 => 1 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) => ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-41-TO-43)]
    
    rule [BASIC-BLOCK-42-TO-44]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( 491460923342184218035706888008750043977755113263 , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-42-TO-44)]
    
    rule [BASIC-BLOCK-43-TO-45]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( 491460923342184218035706888008750043977755113263 , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-43-TO-45)]
    
    rule [BASIC-BLOCK-44-TO-46]: <foundry>
           <kevm>
             <k>
               #execute
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( 320 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 32 ) : ( 669 : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 32 : ( 128 : ( maxUInt64 : ( 420 : ( 0 : ( 0 : ( 0 : ( 0 : ( 0 : ( 4 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) : ( 62 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-44-TO-46)]
    
    rule [BASIC-BLOCK-45-TO-47]: <foundry>
           <kevm>
             <k>
               #execute
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( 320 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 32 ) : ( 669 : ( lengthBytes ( VV5_data_114b9705:Bytes ) : ( 32 : ( 128 : ( maxUInt64 : ( 420 : ( 0 : ( 0 : ( 0 : ( 0 : ( 0 : ( 4 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) : ( 62 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-45-TO-47)]
    
    rule [BASIC-BLOCK-46-TO-48]: <foundry>
           <kevm>
             <k>
               ( .K => #end EVMC_REVERT
               ~> #pc [ REVERT ] )
               ~> #execute
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( b"" => b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 320 => 1 ) : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( 32 => 484 ) ) : ( ( 669 => 68 ) : ( ( lengthBytes ( VV5_data_114b9705:Bytes ) => VV6__l2OutputIndex_114b9705:Int ) : ( ( 32 => 128 ) : ( ( 128 => 67 ) : ( ( maxUInt64 => selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( 420 : ( 0 : ( 0 : ( 0 : ( 0 : ( 0 : ( 4 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) : ( 62 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes ( #buf ( 32 , VV4_gasLimit_114b9705:Int ) => #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-46-TO-48)]
    
    rule [BASIC-BLOCK-47-TO-49]: <foundry>
           <kevm>
             <k>
               ( .K => #end EVMC_REVERT
               ~> #pc [ REVERT ] )
               ~> #execute
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( b"" => b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 320 => 1 ) : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( 32 => 484 ) ) : ( ( 669 => 68 ) : ( ( lengthBytes ( VV5_data_114b9705:Bytes ) => VV6__l2OutputIndex_114b9705:Int ) : ( ( 32 => 128 ) : ( ( 128 => 67 ) : ( ( maxUInt64 => selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( 420 : ( 0 : ( 0 : ( 0 : ( 0 : ( 0 : ( 4 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 580 ) : ( 62 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes ( #buf ( 32 , VV4_gasLimit_114b9705:Int ) => #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-47-TO-49)]
    
    rule [BASIC-BLOCK-48-TO-50]: <foundry>
           <kevm>
             <k>
               ( #end EVMC_REVERT => #halt )
               ~> #pc [ REVERT ]
               ~> #execute
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                 </output>
                 <statusCode>
                   ( _STATUSCODE => EVMC_REVERT )
                 </statusCode>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-48-TO-50)]
    
    rule [BASIC-BLOCK-49-TO-51]: <foundry>
           <kevm>
             <k>
               ( #end EVMC_REVERT => #halt )
               ~> #pc [ REVERT ]
               ~> #execute
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                 </output>
                 <statusCode>
                   ( _STATUSCODE => EVMC_REVERT )
                 </statusCode>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-49-TO-51)]
    
    rule [BASIC-BLOCK-50-TO-52]: <foundry>
           <kevm>
             <k>
               #halt
               ~> ( #pc [ REVERT ]
               ~> #execute => .K )
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                 </output>
                 <statusCode>
                   EVMC_REVERT
                 </statusCode>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-50-TO-52)]
    
    rule [BASIC-BLOCK-51-TO-53]: <foundry>
           <kevm>
             <k>
               #halt
               ~> ( #pc [ REVERT ]
               ~> #execute => .K )
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                 </output>
                 <statusCode>
                   EVMC_REVERT
                 </statusCode>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-51-TO-53)]
    
    rule [BASIC-BLOCK-52-TO-54]: <foundry>
           <kevm>
             <k>
               ( #halt
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 => #popCallStack
               ~> #popWorldState
               ~> 0
               ~> #push
               ~> #refund 0
               ~> #setLocalMem ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                 </output>
                 <statusCode>
                   EVMC_REVERT
                 </statusCode>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-52-TO-54)]
    
    rule [BASIC-BLOCK-53-TO-55]: <foundry>
           <kevm>
             <k>
               ( #halt
               ~> #return ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 => #popCallStack
               ~> #popWorldState
               ~> 0
               ~> #push
               ~> #refund 0
               ~> #setLocalMem ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                 </output>
                 <statusCode>
                   EVMC_REVERT
                 </statusCode>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-53-TO-55)]
    
    rule [BASIC-BLOCK-54-TO-56]: <foundry>
           <kevm>
             <k>
               ( #popCallStack
               ~> #popWorldState
               ~> 0
               ~> #push
               ~> #refund 0
               ~> #setLocalMem ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 => #end EVMC_SUCCESS
               ~> #pc [ STOP ] )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"" )
                 </output>
                 <statusCode>
                   ( EVMC_REVERT => EVMC_SUCCESS )
                 </statusCode>
                 <callStack>
                   ( ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) => .List )
                 </callStack>
                 <interimStates>
                   ( ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } ) => .List )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 491460923342184218035706888008750043977755113263 => 728815563385977040452943777879061427756277306518 )
                   </id>
                   <caller>
                     ( 728815563385977040452943777879061427756277306518 => CALLER_ID:Int )
                   </caller>
                   <callData>
                     ( b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" => b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" ) +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 1 => selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) => .WordStack ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes ( b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( 1 => 0 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) => SetItem ( 645326474426547203313410069153905908525362434349 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ( true => false )
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-54-TO-56)]
    
    rule [BASIC-BLOCK-55-TO-57]: <foundry>
           <kevm>
             <k>
               ( #popCallStack
               ~> #popWorldState
               ~> 0
               ~> #push
               ~> #refund 0
               ~> #setLocalMem ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
               ~> #pc [ CALL ]
               ~> #checkRevert
               ~> #updateRevertOutput ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) 0 => #end EVMC_SUCCESS
               ~> #pc [ STOP ] )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"" )
                 </output>
                 <statusCode>
                   ( EVMC_REVERT => EVMC_SUCCESS )
                 </statusCode>
                 <callStack>
                   ( ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) ) +Int 932 ) : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : ( 491460923342184218035706888008750043977755113263 : ( 1 : ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 193 : ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) => .List )
                 </callStack>
                 <interimStates>
                   ( ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 0 |-> 1 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         2
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } ) => .List )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 491460923342184218035706888008750043977755113263 => 728815563385977040452943777879061427756277306518 )
                   </id>
                   <caller>
                     ( 728815563385977040452943777879061427756277306518 => CALLER_ID:Int )
                   </caller>
                   <callData>
                     ( b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" => b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" ) +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 1 => selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) ) : ( ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 484 ) : ( 68 : ( VV6__l2OutputIndex_114b9705:Int : ( 128 : ( 67 : ( selector ( "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack ) ) ) ) ) ) => .WordStack ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes ( b"\x08\xc3y\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0ePortal: paused\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( 1 => 0 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) => SetItem ( 645326474426547203313410069153905908525362434349 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ( true => false )
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-55-TO-57)]
    
    rule [BASIC-BLOCK-56-TO-58]: <foundry>
           <kevm>
             <k>
               ( #end EVMC_SUCCESS => #halt )
               ~> #pc [ STOP ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   EVMC_SUCCESS
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-56-TO-58)]
    
    rule [BASIC-BLOCK-57-TO-59]: <foundry>
           <kevm>
             <k>
               ( #end EVMC_SUCCESS => #halt )
               ~> #pc [ STOP ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   EVMC_SUCCESS
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-57-TO-59)]
    
    rule [BASIC-BLOCK-58-TO-60]: <foundry>
           <kevm>
             <k>
               #halt
               ~> ( #pc [ STOP ]
               ~> #execute => .K )
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   EVMC_SUCCESS
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( V_2f51df73:Int <=Int lengthBytes ( VV5_data_114b9705:Bytes )
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-58-TO-60)]
    
    rule [BASIC-BLOCK-59-TO-61]: <foundry>
           <kevm>
             <k>
               #halt
               ~> ( #pc [ STOP ]
               ~> #execute => .K )
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   EVMC_SUCCESS
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1\xcd\x1d|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( selector ( "test_withdrawal_paused((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" ) : .WordStack )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 352 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01@" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"HpIo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0" +Bytes #buf ( 32 , VV6__l2OutputIndex_114b9705:Int ) +Bytes #buf ( 32 , VV7_version_114b9705:Int ) +Bytes #buf ( 32 , VV8_stateRoot_114b9705:Int ) +Bytes #buf ( 32 , VV9_messagePasserStorageRoot_114b9705:Int ) +Bytes #buf ( 32 , VV10_latestBlockhash_114b9705:Int ) +Bytes #buf ( 32 , ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) +Int 448 ) ) +Bytes #buf ( 32 , VV0_nonce_114b9705:Int ) +Bytes #buf ( 32 , VV1_sender_114b9705:Int ) +Bytes #buf ( 32 , VV2_target_114b9705:Int ) +Bytes #buf ( 32 , VV3_value_114b9705:Int ) +Bytes #buf ( 32 , VV4_gasLimit_114b9705:Int ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0" +Bytes #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes VV5_data_114b9705:Bytes +Bytes #buf ( ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) -Int lengthBytes ( VV5_data_114b9705:Bytes ) ) , 0 ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes VV11__withdrawalProof_0_114b9705:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 0 |-> 1 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( 27 |-> 491460923342184218035706888008750043977755113263 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       2
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               <expectedReason>
                 b""
               </expectedReason>
               <expectedDepth>
                 0
               </expectedDepth>
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_nonce_114b9705:Int
       andBool ( 0 <=Int VV3_value_114b9705:Int
       andBool ( 0 <=Int VV1_sender_114b9705:Int
       andBool ( 0 <=Int VV2_target_114b9705:Int
       andBool ( 0 <=Int VV7_version_114b9705:Int
       andBool ( 0 <=Int VV4_gasLimit_114b9705:Int
       andBool ( 0 <=Int VV8_stateRoot_114b9705:Int
       andBool ( 0 <=Int VV6__l2OutputIndex_114b9705:Int
       andBool ( 0 <=Int VV10_latestBlockhash_114b9705:Int
       andBool ( 0 <=Int VV9_messagePasserStorageRoot_114b9705:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( VV1_sender_114b9705:Int <Int pow160
       andBool ( VV2_target_114b9705:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_nonce_114b9705:Int <Int pow256
       andBool ( VV3_value_114b9705:Int <Int pow256
       andBool ( VV7_version_114b9705:Int <Int pow256
       andBool ( VV4_gasLimit_114b9705:Int <Int pow256
       andBool ( VV8_stateRoot_114b9705:Int <Int pow256
       andBool ( VV6__l2OutputIndex_114b9705:Int <Int pow256
       andBool ( VV10_latestBlockhash_114b9705:Int <Int pow256
       andBool ( VV9_messagePasserStorageRoot_114b9705:Int <Int pow256
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 1073741824
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int V_2f51df73:Int
       andBool ( 32 ==Int lengthBytes ( VV11__withdrawalProof_0_114b9705:Bytes )
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <Int pow64
       andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int maxUInt64
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
       andBool ( -129 <Int ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) )
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551167
       andBool ( ( notMaxUInt5 &Int ( lengthBytes ( VV5_data_114b9705:Bytes ) +Int maxUInt5 ) ) <=Int 18446744073709551263
       andBool ( ( ( V_2f51df73:Int ==Int V_c9acfbf7:Int
           andBool ( V_2203fc51:Bytes ~> .K ==K V_fafcb44a:Bytes ~> .K
           andBool ( ( ( V_c9acfbf7:Int ==Int 32
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) ~> .K
               andBool ( VV5_data_114b9705:Bytes ~> .K =/=K b"" ~> .K
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 32
                       ))))
              orBool ( ( V_c9acfbf7:Int ==Int 64
               andBool ( V_fafcb44a:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 32 ) ~> .K
               andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
               andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 64
                       ))))
                     ))
                   )))
          orBool ( ( V_2f51df73:Int ==Int 96
           andBool ( V_2203fc51:Bytes ~> .K ==K #buf ( 32 , lengthBytes ( VV5_data_114b9705:Bytes ) ) +Bytes #range ( VV5_data_114b9705:Bytes , 0 , 64 ) ~> .K
           andBool ( _CONTRACT_ID =/=Int 645326474426547203313410069153905908525362434349
           andBool ( 32 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( 64 <Int lengthBytes ( VV5_data_114b9705:Bytes )
           andBool ( lengthBytes ( VV5_data_114b9705:Bytes ) <=Int 96
                   ))))))
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-59-TO-61)]

endmodule
0 Failure nodes. (0 pending and 0 failing)

Join the Runtime Verification Discord server for support: https://discord.com/invite/CurfmXNtbN

See `foundry_success` predicate for more information:
https://github.com/runtimeverification/kontrol/blob/master/src/kontrol/kdist/foundry.md#foundry-success-predicate

Access documentation for Kontrol at https://docs.runtimeverification.com/kontrol